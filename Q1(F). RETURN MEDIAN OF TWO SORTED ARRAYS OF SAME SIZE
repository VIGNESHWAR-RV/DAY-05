
    "RETURN MEDIAN OF TWO SORTED ARRAYS OF SAME SIZE"
	
 //ANONYMOUS FUNCTION

let median = function(num1,num2){
    let mid1 = 0;
    let mid2 = 0;
	let medi1 = 0;
	let medi2 = 0;
  let mid = num1.length/2;
  num1.sort((a,b)=>a-b);
  if(num1.length%2!==0){
       mid1 = mid-0.5;
       mid2 = mid+0.5;
       medi1 = num1[Math.floor((mid1+mid2)/2)];
  }else{
       medi1 = num1[mid];
  }
  mid = num2.length/2;
  num2.sort((a,b)=>a-b);
  if(num2.length%2!==0){
       mid1 = mid-0.5;
       mid2 = mid+0.5;
       medi2 = num2[Math.floor((mid1+mid2)/2)];
  }else{
       medi2 = num2[mid];
  }
  return (medi1+" "+medi2);
};
let array1 = [2,5,7,3,5,8,6];
let array2 = [6,8,6,8,6,8,6];
console.log(median(array1,array2));

X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X	
                                                          |
                                                          X
OUTPUT :                                                  |
          5 6                                             x
                                                          |
X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X		

     //IIFE FUNCTION

let array1 = [2,5,7,3,5,8,6];
let array2 = [6,8,6,8,6,8,6];
(function(num1,num2){
        let mid1 = 0;
    let mid2 = 0;
	let medi1 = 0;
	let medi2 = 0;
  let mid = num1.length/2;
  num1.sort((a,b)=>a-b);
  if(num1.length%2!==0){
       mid1 = mid-0.5;
       mid2 = mid+0.5;
       medi1 = num1[Math.floor((mid1+mid2)/2)];
  }else{
       medi1 = num1[mid];
  }
  mid = num2.length/2;
  num2.sort((a,b)=>a-b);
  if(num2.length%2!==0){
       mid1 = mid-0.5;
       mid2 = mid+0.5;
       medi2 = num2[Math.floor((mid1+mid2)/2)];
  }else{
       medi2 = num2[mid];
  }
  return console.log(medi1+" "+medi2);
})(array1,array2);


X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X	
                                                          |
                                                          X
OUTPUT :                                                  |
          5 6                                             X
                                                          |
X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X-X		